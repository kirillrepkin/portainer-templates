{
    "version": "3",
    "templates": [
        {
            "id": 1,
            "type": 3,
            "name": "semaphore",
            "title": "Semaphore",
            "description": "Semaphore CI/CD application",
            "note": "Ensure PostgreSQL is running on the host system for this to work.",
            "logo": "https://raw.githubusercontent.com/imagegenius/templates/main/unraid/img/semaphore.png",
            "categories": ["CI/CD", "DevOps"],
            "platform": "linux",
            "repository": {
                "url": "https://github.com/kirillrepkin/portainer-templates",
                "stackfile": "apps/semaphore/docker-compose.yml"
            },
            "env": [
                {
                    "name": "SEMAPHORE_DB_DIALECT",
                    "label": "Database Dialect",
                    "default": "postgres"
                },
                {
                    "name": "SEMAPHORE_DB_HOST",
                    "label": "Database Host",
                    "description": "The host address for your database",
                    "default": "127.0.0.1"
                },
                {
                    "name": "SEMAPHORE_DB_NAME",
                    "label": "Database Name",
                    "default": "semaphore"
                },
                {
                    "name": "SEMAPHORE_DB_USER",
                    "label": "Database Username",
                    "default": "semaphore"
                },
                {
                    "name": "SEMAPHORE_DB_PASS",
                    "label": "Database Password",
                    "default": "semaphore"
                },
                {
                    "name": "SEMAPHORE_ADMIN",
                    "label": "Admin Username",
                    "default": "admin"
                },
                {
                    "name": "SEMAPHORE_ADMIN_PASSWORD",
                    "label": "Admin Password",
                    "default": "semaphore"
                },
                {
                    "name": "SEMAPHORE_ADMIN_NAME",
                    "label": "Admin Name",
                    "default": "Administrator"
                },
                {
                    "name": "SEMAPHORE_ADMIN_EMAIL",
                    "label": "Admin Email",
                    "default": "admin@localhost"
                },
                {
                    "name": "VOLUMES_BASE_PATH",
                    "label": "Volumes Base Path",
                    "description": "The base path for storing volumes.",
                    "default": "/home/docker/data"
                }
            ]
        },
        {
            "id": 2,
            "type": 3,
            "title": "n8n Automation Platform",
            "description": "n8n is a free and open workflow automation tool.",
            "note": "Ensure the volume path /mnt/data/docker/n8n exists on your host.",
            "categories": ["Automation", "DevOps", "Workflow"],
            "platform": "linux",
            "logo": "https://pbs.twimg.com/profile_images/1536335358803251202/-gASF0c6_400x400.png",
            "repository": {
                "url": "https://github.com/kirillrepkin/portainer-templates",
                "stackfile": "apps/n8n/docker-compose.yml"
            },
            "env": [
                {
                    "name": "PUBLIC_HOST",
                    "label": "Public Host",
                    "description": "The public hostname or IP address where n8n will be accessible.",
                    "default": "n8n.example.com"
                },
                {
                    "name": "PUBLIC_PORT",
                    "label": "Public Port",
                    "description": "The port number where n8n will be accessible.",
                    "default": "9020"
                },
                {
                    "name": "GENERIC_TIMEZONE",
                    "label": "Timezone",
                    "description": "Set the timezone for n8n.",
                    "default": "UTC"
                },
                {
                    "name": "VOLUMES_BASE_PATH",
                    "label": "Volumes Base Path",
                    "description": "The base path for storing volumes.",
                    "default": "/home/docker/data"
                }
            ]
        },
        {
            "id": 3,
            "type": 3,
            "title": "Dashy",
            "description": "A self-hostable personal dashboard built for modern browsers.",
            "note": "This template stores Dashy's configuration at /mnt/data/docker/dashy on the host. Ensure the path exists and has the right permissions.",
            "categories": ["Dashboard", "Web"],
            "platform": "linux",
            "logo": "https://dashy.to/img/dashy.png",
            "repository": {
                "url": "https://github.com/kirillrepkin/portainer-templates",
                "stackfile": "apps/dashy/docker-compose.yml"
            },
            "env": [
                {
                    "name": "UID",
                    "label": "User ID",
                    "description": "The User ID for the Dashy container.",
                    "default": "1000"
                },
                {
                    "name": "GID",
                    "label": "Group ID",
                    "description": "The Group ID for the Dashy container.",
                    "default": "1000"
                },
                {
                    "name": "VOLUMES_BASE_PATH",
                    "label": "Volumes Base Path",
                    "description": "The base path for storing volumes.",
                    "default": "/home/docker/data"
                }
            ]
        },
        {
            "id": 4,
            "type": 3,
            "name": "postgres",
            "title": "PostgreSQL",
            "description": "PostgreSQL is a powerful, open-source relational database system.",
            "note": "Ensure the volume path /mnt/data/docker/postgres exists and has the correct permissions.",
            "categories": ["Database"],
            "platform": "linux",
            "logo": "https://upload.wikimedia.org/wikipedia/commons/2/29/Postgresql_elephant.svg",
            "repository": {
                "url": "https://github.com/kirillrepkin/portainer-templates",
                "stackfile": "system/postgres/docker-compose.yml"
            },
            "env": [
            {
                "name": "POSTGRES_DB",
                "label": "Database Name",
                "description": "The name of the database to create.",
                "default": "postgres"
            },
            {
                "name": "POSTGRES_USER",
                "label": "Database User",
                "description": "The username for the PostgreSQL database.",
                "default": "postgres"
            },
            {
                "name": "POSTGRES_PASSWORD",
                "label": "Database Password",
                "description": "The password for the PostgreSQL database user.",
                "default": "postgres"
            },
            {
                "name": "VOLUMES_BASE_PATH",
                "label": "Volumes Base Path",
                "description": "The base path for storing volumes.",
                "default": "/mnt/data/docker"
            },
            {
                "name": "PUBLIC_PORT",
                "label": "Public Port",
                "description": "The port number where PostgreSQL will be accessible.",
                "default": "5432"
            },
            {
                "name": "POSTGRES_VERSION",
                "label": "Postgres Version",
                "description": "The version of PostgreSQL to use.",
                "default": "latest"
            }
            ]
        },
        {
            "id": 5,
            "type": 3,
            "name": "khoj",
            "title": "Khoj",
            "description": "Khoj is a personal assistant and knowledge base powered by AI, enabling natural language querying of notes, documents, and other stored data.",
            "note": "",
            "categories": ["AI", "Automation", "Personal"],
            "platform": "linux",
            "logo": "https://docs.khoj.dev/img/khoj-logo-sideways-500.png",
            "repository": {
                "url": "https://github.com/kirillrepkin/portainer-templates",
                "stackfile": "apps/khoj/docker-compose.yml"
            },
            "env": [
                {
                    "name": "KHOJ_DJANGO_SECRET_KEY",
                    "label": "Django Secret Key",
                    "default": "django-insecure-1^7d=3&h5!mz1!l1jv7!1l2!l3jv4!l5j6!l7j8!l9j0"
                },
                {
                    "name": "KHOJ_ADMIN_EMAIL",
                    "label": "Admin Email",
                    "default": "admin@localhost"
                },
                {
                    "name": "KHOJ_ADMIN_PASSWORD",
                    "label": "Admin Password",
                    "default": "admin"
                },
                {
                    "name": "OPENAI_API_KEY",
                    "label": "OpenAI API Key",
                    "default": "sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                },
                {
                    "name": "KHOJ_DOMAIN",
                    "label": "Domain",
                    "default": "khoj.example.com"
                },
                {
                    "name": "VOLUMES_BASE_PATH",
                    "label": "Volumes Base Path",
                    "description": "The base path for storing volumes.",
                    "default": "/home/docker/data"
                }
            ]
        },
        {
            "id": 6,
            "type": 3,
            "name": "nginxproxymanager",
            "title": "Nginx Proxy Manager",
            "description": "Nginx Proxy Manager is a web interface for managing and configuring reverse proxies and load balancers.",
            "note": "This template stores Nginx Proxy Manager's configuration at /mnt/data/docker/nginxproxymanager on the host. Ensure the path exists and has the right permissions.",
            "categories": ["Proxy", "Web"],
            "platform": "linux",
            "logo": "https://camo.githubusercontent.com/a0d453df6c842b098350e3d6bd0a739e7e53b093d51ddfee820b38d42b4382fc/68747470733a2f2f6e67696e7870726f78796d616e616765722e636f6d2f6769746875622e706e67",
            "repository": {
                "url": "https://github.com/kirillrepkin/portainer-templates",
                "stackfile": "apps/nginx-proxy-manager/docker-compose.yml"
            },
            "env": [
                {
                    "name": "VOLUMES_BASE_PATH",
                    "label": "Volumes Base Path",
                    "description": "The base path for storing volumes.",
                    "default": "/home/docker/data"
                }
            ]
        },
        {
            "id": 7,
            "type": 3,
            "name": "paperless-ngx",
            "title": "Paperless-NGX",
            "description": "Paperless-NGX is a web interface for managing and processing document workflows.",
            "note": "This template stores Paperless-NGX's configuration at /mnt/data/docker/paperless-ngx on the host. Ensure the path exists and has the right permissions.",
            "categories": ["Workflow", "Automation", "Personal"],
            "platform": "linux",
            "logo": "https://github.com/paperless-ngx/paperless-ngx/raw/main/resources/logo/web/png/White%20logo%20-%20no%20background.png",
            "repository": {
                "url": "https://github.com/kirillrepkin/portainer-templates",
                "stackfile": "apps/paperless-ngx/docker-compose.yml"
            },
            "env": [
                {
                    "name": "VOLUMES_BASE_PATH",
                    "label": "Volumes Base Path",
                    "description": "The base path for storing volumes.",
                    "default": "/home/docker/data"
                },
                {
                    "name": "POSTGRES_HOST",
                    "label": "Postgres Host",
                    "default": "localhost"
                },
                {
                    "name": "REDIS_HOST",
                    "label": "Redis Host",
                    "default": "localhost"
                },
                {
                    "name": "REDIS_URL",
                    "label": "Redis URL",
                    "default": "redis://redis:redis@localhost:6379/0"
                }
            ]
        },
        {
            "id": 8,
            "type": 3,
            "name": "redis",
            "title": "Redis",
            "description": "Redis is a high-performance, open-source key-value store.",
            "note": "Ensure the volume path /mnt/data/docker/redis exists and has the correct permissions.",
            "categories": ["Database", "Cache"],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/imagegenius/templates/main/unraid/img/redis.png",
            "repository": {
                "url": "https://github.com/kirillrepkin/portainer-templates",
                "stackfile": "system/redis/docker-compose.yml"
            },
            "env": [
                {
                    "name": "VOLUMES_BASE_PATH",
                    "label": "Volumes Base Path",
                    "description": "The base path for storing volumes.",
                    "default": "/mnt/data/docker"
                },
                {
                    "name": "REDIS_PASSWORD",
                    "label": "Redis Password",
                    "default": "redis"
                },
                {
                    "name": "REDIS_USER",
                    "label": "Redis User",
                    "default": "redis"
                },
                {
                    "name": "REDIS_USER_PASSWORD",
                    "label": "Redis User Password",
                    "default": "redis"
                },
                {
                    "name": "REDIS_PORT",
                    "label": "Redis Port",
                    "default": "6379"
                }
            ]
        },
        {
            "id": 9,
            "type": 3,
            "name": "healthchecks",
            "title": "Healthchecks",
            "description": "Healthchecks is a monitoring and health check service",
            "note": "",
            "categories": ["Monitoring", "Cron", "DevOps", "Automation"],
            "platform": "linux",
            "logo": "https://healthchecks.io/static/img/logo-full-ua.svg",
            "repository": {
                "url": "https://github.com/kirillrepkin/portainer-templates",
                "stackfile": "apps/healthchecks/docker-compose.yml"
            },
            "env": [
                {
                    "name": "VOLUMES_BASE_PATH",
                    "label": "Volumes Base Path",
                    "description": "The base path for storing volumes.",
                    "default": "/home/docker/data"
                },
                {
                    "name": "POSTGRES_HOST",
                    "label": "Postgres Host",
                    "default": "localhost"
                },
                {
                    "name": "POSTGRES_PORT",
                    "label": "Postgres Port",
                    "default": "5432"
                },
                {
                    "name": "POSTGRES_USER",
                    "label": "Postgres User",
                    "default": "healthchecks"
                },
                {
                    "name": "POSTGRES_PASSWORD",
                    "label": "Postgres Password",
                    "default": "healthchecks"
                },
                {
                    "name": "POSTGRES_DB",
                    "label": "Postgres Database",
                    "default": "healthchecks"
                }
            ]
        },
        {
            "id": 10,
            "type": 3,
            "name": "nodered",
            "title": "Node-RED",
            "description": "Node-RED is a flow-based programming environment for event-driven applications.",
            "note": "Ensure the volume path /mnt/data/docker/nodered exists and has the correct permissions.",
            "categories": ["Automation"],
            "platform": "linux",
            "logo": "https://nodered.org/about/resources/media/node-red-icon-2.png",
            "repository": {
                "url": "https://github.com/kirillrepkin/portainer-templates",
                "stackfile": "apps/node-red/docker-compose.yml"
            },
            "env": [
                {
                    "name": "VOLUMES_BASE_PATH",
                    "label": "Volumes Base Path",
                    "description": "The base path for storing volumes.",
                    "default": "/home/docker/data"
                },
                {
                    "name": "NODERED_PORT",
                    "label": "Node-RED Port",
                    "default": "1880"
                }
            ]
        },
        {
            "id": 11,
            "type": 3,
            "name": "emqx",
            "title": "EMQX",
            "description": "EMQX is an open source MQTT broker.",
            "note": "Ensure the volume path /mnt/data/docker/emqx exists and has the correct permissions.",
            "categories": ["Messaging", "IoT"],
            "platform": "linux",
            "logo": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRwmh3Y2mJBL3I75UClKe8vy4rU07trldOhqg&s",
            "repository": {
                "url": "https://github.com/kirillrepkin/portainer-templates",
                "stackfile": "apps/emqx/docker-compose.yml"
            },
            "env": [
                {
                    "name": "VOLUMES_BASE_PATH",
                    "label": "Volumes Base Path",
                    "description": "The base path for storing volumes.",
                    "default": "/home/docker/data"
                }
            ]
        },
        {
            "id": 12,
            "type": 3,
            "name": "Vaultwarden",
            "title": "Vaultwarden",
            "description": "Vaultwarden is a password manager.",
            "note": "Ensure the volume path /mnt/data/docker/vaultwarden exists and has the correct permissions.",
            "categories": ["Password", "Security"],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/imagegenius/templates/main/unraid/img/vaultwarden.png",
            "repository": {
                "url": "https://github.com/kirillrepkin/portainer-templates",
                "stackfile": "apps/vaultwarden/docker-compose.yml"
            },
            "env": [
                {
                    "name": "VOLUMES_BASE_PATH",
                    "label": "Volumes Base Path",
                    "description": "The base path for storing volumes.",
                    "default": "/home/docker/data"
                },
                {
                    "name": "PUBLIC_PORT",
                    "label": "Public Port",
                    "description": "The port number where Vaultwarden will be accessible.",
                    "default": "3343"
                }
            ]
        },
        {
            "id": 13,
            "type": 3,
            "name": "s3fs-cryfs",
            "title": "s3fs-cryfs",
            "description": "s3fs-cryfs is a FUSE filesystem that mounts S3 compatible storage buckets",
            "note": "Ensure the volume path /mnt/data/docker/s3fs-cryfs exists and has the correct permissions.",
            "categories": ["Storage"],
            "platform": "linux",
            "logo": "https://d2908q01vomqb2.cloudfront.net/22d200f8670dbdb3e253a90eee5098477c95c23d/2017/12/19/KMS_feature.png",
            "repository": {
                "url": "https://github.com/kirillrepkin/portainer-templates",
                "stackfile": "system/s3fs-cryfs/docker-compose.yml"
            },
            "env": [
                {
                    "name": "S3_BUCKET",
                    "label": "S3_BUCKET"
                },
                {
                    "name": "S3_ACCESS_KEY",
                    "label": "S3_ACCESS_KEY"
                },
                {
                    "name": "S3_SECRET_KEY",
                    "label": "S3_SECRET_KEY"
                },
                {
                    "name": "S3_URL",
                    "label": "S3_URL"
                },
                {
                    "name": "UID",
                    "label": "UID"
                },
                {
                    "name": "GID",
                    "label": "GID"
                },
                {
                    "name": "CRYFS_ENC_PASSWD",
                    "label": "CRYFS_ENC_PASSWD"
                },
                {
                    "name": "VOLUMES_BASE_PATH",
                    "label": "Volumes Base Path",
                    "description": "The base path for storing volumes.",
                    "default": "/home/docker/data"
                }
            ]
        },
        {
            "id": 14,
            "type": 3,
            "name": "nextcloud",
            "title": "",
            "description": "",
            "note": "",
            "categories": ["Personal", "Cloud"],
            "platform": "linux",
            "logo": "https://camo.githubusercontent.com/5acd203ccf6471ec71f5a40928aab3e2cf856addda38015e184e283d1a64a56d/68747470733a2f2f63646e2e7261776769742e636f6d2f6e657874636c6f75642f646f636b65722f303731623838386637663638396361613632633134393862366336316362333539396263656132622f6c6f676f2e737667",
            "repository": {
                "url": "https://github.com/kirillrepkin/portainer-templates",
                "stackfile": "apps/nextcloud/docker-compose.yml"
            },
            "env": [
                {
                    "name": "POSTGRES_DB",
                    "label": "POSTGRES_DB"
                },
                {
                    "name": "POSTGRES_USER",
                    "label": "POSTGRES_USER"
                },
                {
                    "name": "POSTGRES_PASSWORD",
                    "label": "POSTGRES_PASSWORD"
                },
                {
                    "name": "POSTGRES_HOST",
                    "label": "POSTGRES_HOST"
                },
                {
                    "name": "NEXTCLOUD_ADMIN_USER",
                    "label": "NEXTCLOUD_ADMIN_USER"
                },
                {
                    "name": "NEXTCLOUD_ADMIN_PASSWORD",
                    "label": "NEXTCLOUD_ADMIN_PASSWORD"
                },
                {
                    "name": "SMTP_HOST",
                    "label": "SMTP_HOST"
                },
                {
                    "name": "SMTP_SECURE",
                    "label": "SMTP_SECURE"
                },
                {
                    "name": "SMTP_PORT",
                    "label": "SMTP_PORT"
                },
                {
                    "name": "SMTP_AUTHTYPE",
                    "label": "SMTP_AUTHTYPE"
                },
                {
                    "name": "SMTP_NAME",
                    "label": "SMTP_NAME"
                },
                {
                    "name": "SMTP_PASSWORD",
                    "label": "SMTP_PASSWORD"
                },
                {
                    "name": "MAIL_FROM_ADDRESS",
                    "label": "MAIL_FROM_ADDRESS"
                },
                {
                    "name": "MAIL_DOMAIN",
                    "label": "MAIL_DOMAIN"
                },
                {
                    "name": "REDIS_HOST",
                    "label": "REDIS_HOST"
                },

                {
                    "name": "REDIS_HOST_PORT",
                    "label": "REDIS_HOST_PORT"
                },
                {
                    "name": "REDIS_HOST_USER",
                    "label": "REDIS_HOST_USER"
                },
                {
                    "name": "REDIS_HOST_PASSWORD",
                    "label": "REDIS_HOST_PASSWORD"
                },
                {
                    "name": "PUBLIC_PORT",
                    "label": "PUBLIC_PORT"
                },
                {
                    "name": "DATA_PATH",
                    "label": "DATA_PATH"
                },
                {
                    "name": "VOLUMES_BASE_PATH",
                    "label": "VOLUMES_BASE_PATH"
                },
                {
                    "name": "OBJECTSTORE_S3_BUCKET",
                    "label": "OBJECTSTORE_S3_BUCKET"
                },
                {
                    "name": "OBJECTSTORE_S3_REGION",
                    "label": "OBJECTSTORE_S3_REGION"
                },
                {
                    "name": "OBJECTSTORE_S3_HOST",
                    "label": "OBJECTSTORE_S3_HOST"
                },
                {
                    "name": "OBJECTSTORE_S3_PORT",
                    "label": "OBJECTSTORE_S3_PORT"
                },
                {
                    "name": "OBJECTSTORE_S3_KEY",
                    "label": "OBJECTSTORE_S3_KEY"
                },
                {
                    "name": "OBJECTSTORE_S3_SECRET",
                    "label": "OBJECTSTORE_S3_SECRET"
                }
            ]
        },
        {
            "id": 15,
            "type": 3,
            "name": "Zabbix",
            "title": "Zabbix server",
            "description": "Zabbix server",
            "note": "",
            "categories": ["Monitoring"],
            "platform": "linux",
            "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Zabbix_logo_square.svg/2500px-Zabbix_logo_square.svg.png",
            "repository": {
                "url": "https://github.com/kirillrepkin/portainer-templates",
                "stackfile": "system/zabbix/docker-compose.yml"
            },
            "env": [
                {
                    "name": "POSTGRES_DB",
                    "label": "POSTGRES_DB",
                    "default": "zabbix"
                },
                {
                    "name": "POSTGRES_USER",
                    "label": "POSTGRES_USER",
                    "default": "zabbix"
                },
                {
                    "name": "POSTGRES_PASSWORD",
                    "label": "POSTGRES_PASSWORD",
                    "default": "zabbix"
                },
                {
                    "name": "POSTGRES_HOST",
                    "label": "POSTGRES_HOST",
                    "default": "postgres"
                },
                {
                    "name": "POSTGRES_PORT",
                    "label": "POSTGRES_PORT",
                    "default": "5432"
                },
                {
                    "name": "TZ",
                    "label": "TZ",
                    "default": "Europe/Moscow"
                }
            ]
        }
    ]
}